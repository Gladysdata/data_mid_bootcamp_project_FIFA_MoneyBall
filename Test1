{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from scipy import stats\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns \n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error\n",
    "from scipy.special import inv_boxcox"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['ID', 'Name', 'Age', 'OVA', 'Nationality', 'Club', 'BOV', 'BP',\n",
       "       'Position', 'Player Photo',\n",
       "       ...\n",
       "       'CDM', 'RDM', 'RWB', 'LB', 'LCB', 'CB', 'RCB', 'RB', 'GK', 'Gender'],\n",
       "      dtype='object', length=107)"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fifa_data = pd.read_csv('data_mid_bootcamp_project_FIFA_MoneyBall-master/fifa21_male2.csv')\n",
    "fifa_data.columns"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. choosing the columns we want"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>A/W</th>\n",
       "      <th>D/W</th>\n",
       "      <th>Defending</th>\n",
       "      <th>Attacking</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>G. Pasquale</td>\n",
       "      <td>Medium</td>\n",
       "      <td>High</td>\n",
       "      <td>208</td>\n",
       "      <td>313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Luis García</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Medium</td>\n",
       "      <td>153</td>\n",
       "      <td>337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>J. Cole</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Low</td>\n",
       "      <td>99</td>\n",
       "      <td>337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>D. Yorke</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>75</td>\n",
       "      <td>264</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Iniesta</td>\n",
       "      <td>High</td>\n",
       "      <td>Medium</td>\n",
       "      <td>181</td>\n",
       "      <td>367</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17120</th>\n",
       "      <td>A. Medioub</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Medium</td>\n",
       "      <td>198</td>\n",
       "      <td>197</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17121</th>\n",
       "      <td>W. Rickard</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Medium</td>\n",
       "      <td>132</td>\n",
       "      <td>248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17122</th>\n",
       "      <td>C. Barrett</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Medium</td>\n",
       "      <td>163</td>\n",
       "      <td>218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17123</th>\n",
       "      <td>J. Gazibegović</td>\n",
       "      <td>High</td>\n",
       "      <td>Medium</td>\n",
       "      <td>180</td>\n",
       "      <td>223</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17124</th>\n",
       "      <td>Pablo Rodríguez</td>\n",
       "      <td>High</td>\n",
       "      <td>Medium</td>\n",
       "      <td>35</td>\n",
       "      <td>254</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>17125 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Name     A/W     D/W  Defending  Attacking\n",
       "0          G. Pasquale  Medium    High        208        313\n",
       "1          Luis García  Medium  Medium        153        337\n",
       "2              J. Cole  Medium     Low         99        337\n",
       "3             D. Yorke     NaN     NaN         75        264\n",
       "4              Iniesta    High  Medium        181        367\n",
       "...                ...     ...     ...        ...        ...\n",
       "17120       A. Medioub  Medium  Medium        198        197\n",
       "17121       W. Rickard  Medium  Medium        132        248\n",
       "17122       C. Barrett  Medium  Medium        163        218\n",
       "17123   J. Gazibegović    High  Medium        180        223\n",
       "17124  Pablo Rodríguez    High  Medium         35        254\n",
       "\n",
       "[17125 rows x 5 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "fifa1 = fifa_data['Name']\n",
    "fifa2 = fifa_data['A/W']\n",
    "fifa3 = fifa_data['D/W']\n",
    "fifa4 = fifa_data['Defending']\n",
    "fifa5 = fifa_data['Attacking']\n",
    "\n",
    "data = pd.concat([fifa1, fifa2, fifa3, fifa4, fifa5], join = 'inner', axis = 1)\n",
    "data\n"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Standardizing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "def cleaning_0(data): \n",
    "    cols = [col_name.lower().replace(' ', '_') for col_name in data.columns]\n",
    "    data.columns = cols\n",
    "    question1 = input(\"Are there columns to drop? (Y/N)\")\n",
    "    while question1 == \"Y\":\n",
    "        which_one = input(\"Enter column to drop (None: script runs further):\")\n",
    "        if which_one != \"None\":\n",
    "            data = data.drop([which_one], axis=1)\n",
    "            question2 = input(\"Are there more columns to drop? (Y/N)\")\n",
    "            if question2 == \"Y\":\n",
    "                question1 = question2\n",
    "            elif question2 == \"N\":\n",
    "                print(\"No more columns dropped.\")\n",
    "                break\n",
    "            else:\n",
    "                print(\"Error: input must be Y or N!\")\n",
    "                question2 = input(\"Are there more columns to drop? (Y/N)\")   \n",
    "        elif which_one == \"None\":\n",
    "            break   \n",
    "    if question1 == \"N\":\n",
    "        print(\"No columns dropped.\")\n",
    "    elif question1 != \"Y\" and question1 != \"N\":\n",
    "        print(\"Error: input must be Y or N!\")\n",
    "        question1 = input(\"Are there columns to drop? (Y/N)\")\n",
    "        while question1 == \"Y\":\n",
    "            which_one = input(\"Enter column to drop (None: continue without dropping or random key: repeat question):\")\n",
    "            if which_one == \"None\":\n",
    "                break\n",
    "            elif which_one != \"None\":\n",
    "                data = data.drop([which_one], axis=1)\n",
    "                question2 = input(\"Are there more columns to drop? (Y/N)\")\n",
    "                if question2 == \"Y\":\n",
    "                    question1 = question2\n",
    "                elif question2 == \"N\":\n",
    "                    print(\"No more columns dropped.\")\n",
    "                    break\n",
    "                else:\n",
    "                    print(\"Error: input must be Y or N!\")\n",
    "                    question2 = input(\"Are there more columns to drop? (Y/N)\")\n",
    "        if question1 == \"N\":\n",
    "            print(\"No columns dropped.\")\n",
    "        elif question1 != \"Y\" and question1 != \"N\":\n",
    "            (\"Error: input must be Y or N! To drop columns re-run function. Standardisation nevertheless complete\")\n",
    "            question1 = input(\"Are there columns to drop? (Y/N)\")\n",
    "    ordered_columns = sorted(data.columns, reverse=False)\n",
    "    data = data[ordered_columns]\n",
    "    return data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No columns dropped.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>a/w</th>\n",
       "      <th>attacking</th>\n",
       "      <th>d/w</th>\n",
       "      <th>defending</th>\n",
       "      <th>name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Medium</td>\n",
       "      <td>313</td>\n",
       "      <td>High</td>\n",
       "      <td>208</td>\n",
       "      <td>G. Pasquale</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Medium</td>\n",
       "      <td>337</td>\n",
       "      <td>Medium</td>\n",
       "      <td>153</td>\n",
       "      <td>Luis García</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Medium</td>\n",
       "      <td>337</td>\n",
       "      <td>Low</td>\n",
       "      <td>99</td>\n",
       "      <td>J. Cole</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NaN</td>\n",
       "      <td>264</td>\n",
       "      <td>NaN</td>\n",
       "      <td>75</td>\n",
       "      <td>D. Yorke</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>High</td>\n",
       "      <td>367</td>\n",
       "      <td>Medium</td>\n",
       "      <td>181</td>\n",
       "      <td>Iniesta</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17120</th>\n",
       "      <td>Medium</td>\n",
       "      <td>197</td>\n",
       "      <td>Medium</td>\n",
       "      <td>198</td>\n",
       "      <td>A. Medioub</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17121</th>\n",
       "      <td>Medium</td>\n",
       "      <td>248</td>\n",
       "      <td>Medium</td>\n",
       "      <td>132</td>\n",
       "      <td>W. Rickard</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17122</th>\n",
       "      <td>Medium</td>\n",
       "      <td>218</td>\n",
       "      <td>Medium</td>\n",
       "      <td>163</td>\n",
       "      <td>C. Barrett</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17123</th>\n",
       "      <td>High</td>\n",
       "      <td>223</td>\n",
       "      <td>Medium</td>\n",
       "      <td>180</td>\n",
       "      <td>J. Gazibegović</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17124</th>\n",
       "      <td>High</td>\n",
       "      <td>254</td>\n",
       "      <td>Medium</td>\n",
       "      <td>35</td>\n",
       "      <td>Pablo Rodríguez</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>17125 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          a/w  attacking     d/w  defending             name\n",
       "0      Medium        313    High        208      G. Pasquale\n",
       "1      Medium        337  Medium        153      Luis García\n",
       "2      Medium        337     Low         99          J. Cole\n",
       "3         NaN        264     NaN         75         D. Yorke\n",
       "4        High        367  Medium        181          Iniesta\n",
       "...       ...        ...     ...        ...              ...\n",
       "17120  Medium        197  Medium        198       A. Medioub\n",
       "17121  Medium        248  Medium        132       W. Rickard\n",
       "17122  Medium        218  Medium        163       C. Barrett\n",
       "17123    High        223  Medium        180   J. Gazibegović\n",
       "17124    High        254  Medium         35  Pablo Rodríguez\n",
       "\n",
       "[17125 rows x 5 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaning_0(data)"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Dealing with Null values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>a/w</th>\n",
       "      <th>d/w</th>\n",
       "      <th>defending</th>\n",
       "      <th>attacking</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17120</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17121</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17122</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17123</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17124</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>17125 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        name    a/w    d/w  defending  attacking\n",
       "0      False  False  False      False      False\n",
       "1      False  False  False      False      False\n",
       "2      False  False  False      False      False\n",
       "3      False   True   True      False      False\n",
       "4      False  False  False      False      False\n",
       "...      ...    ...    ...        ...        ...\n",
       "17120  False  False  False      False      False\n",
       "17121  False  False  False      False      False\n",
       "17122  False  False  False      False      False\n",
       "17123  False  False  False      False      False\n",
       "17124  False  False  False      False      False\n",
       "\n",
       "[17125 rows x 5 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>a/w</th>\n",
       "      <th>d/w</th>\n",
       "      <th>defending</th>\n",
       "      <th>attacking</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>G. Pasquale</td>\n",
       "      <td>Medium</td>\n",
       "      <td>High</td>\n",
       "      <td>208</td>\n",
       "      <td>313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Luis García</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Medium</td>\n",
       "      <td>153</td>\n",
       "      <td>337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>J. Cole</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Low</td>\n",
       "      <td>99</td>\n",
       "      <td>337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Iniesta</td>\n",
       "      <td>High</td>\n",
       "      <td>Medium</td>\n",
       "      <td>181</td>\n",
       "      <td>367</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>D. Odonkor</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Medium</td>\n",
       "      <td>79</td>\n",
       "      <td>271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17120</th>\n",
       "      <td>A. Medioub</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Medium</td>\n",
       "      <td>198</td>\n",
       "      <td>197</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17121</th>\n",
       "      <td>W. Rickard</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Medium</td>\n",
       "      <td>132</td>\n",
       "      <td>248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17122</th>\n",
       "      <td>C. Barrett</td>\n",
       "      <td>Medium</td>\n",
       "      <td>Medium</td>\n",
       "      <td>163</td>\n",
       "      <td>218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17123</th>\n",
       "      <td>J. Gazibegović</td>\n",
       "      <td>High</td>\n",
       "      <td>Medium</td>\n",
       "      <td>180</td>\n",
       "      <td>223</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17124</th>\n",
       "      <td>Pablo Rodríguez</td>\n",
       "      <td>High</td>\n",
       "      <td>Medium</td>\n",
       "      <td>35</td>\n",
       "      <td>254</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>17036 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  name     a/w     d/w  defending  attacking\n",
       "0          G. Pasquale  Medium    High        208        313\n",
       "1          Luis García  Medium  Medium        153        337\n",
       "2              J. Cole  Medium     Low         99        337\n",
       "4              Iniesta    High  Medium        181        367\n",
       "5           D. Odonkor  Medium  Medium         79        271\n",
       "...                ...     ...     ...        ...        ...\n",
       "17120       A. Medioub  Medium  Medium        198        197\n",
       "17121       W. Rickard  Medium  Medium        132        248\n",
       "17122       C. Barrett  Medium  Medium        163        218\n",
       "17123   J. Gazibegović    High  Medium        180        223\n",
       "17124  Pablo Rodríguez    High  Medium         35        254\n",
       "\n",
       "[17036 rows x 5 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1 = data.dropna(how='any',axis=0) \n",
    "data1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "name         0\n",
       "a/w          0\n",
       "d/w          0\n",
       "defending    0\n",
       "attacking    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data1.isnull().sum()"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# begin exploring"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "name": "python",
   "version": "3.9.13"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
